{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanvdmeij/Coding/WebDevelopment/React-course/quizzical/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from \"nanoid\";\nimport { useEffect, useState } from \"react\";\nimport Question from \"./Question\";\nimport blobs from \"../images/blobs.png\";\nimport blobs2 from \"../images/blobs2.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const [hasStarted, setHasStarted] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [isDone, setIsDone] = useState(false);\n  const [correct, setCorrect] = useState(0);\n  useEffect(() => {\n    console.log(\"run\");\n    fetch(\"https://opentdb.com/api.php?amount=5&category=9&difficulty=medium\").then(res => res.json()).then(data => setQuestions(data.results.map(quest => {\n      console.log(quest.correct_answer);\n      let answers = [...quest.incorrect_answers, quest.correct_answer];\n      answers = answers.sort(() => Math.random() - 0.5);\n      return { ...quest,\n        selected: \"\",\n        id: nanoid(),\n        shuffledArray: answers\n      };\n    })));\n  }, []);\n\n  function startQuiz() {\n    setHasStarted(prev => !prev);\n  }\n\n  function setSelected(id, selectedAnswer) {\n    setQuestions(prev => {\n      return prev.map(quest => {\n        if (quest.id === id) {\n          return { ...quest,\n            selected: selectedAnswer\n          };\n        } else {\n          return quest;\n        }\n      });\n    });\n  }\n\n  const questionElements = questions.map(quest => {\n    const id = quest.id;\n    return /*#__PURE__*/_jsxDEV(Question, {\n      setSelected: setSelected,\n      selected: quest.selected,\n      question: quest.question,\n      answers: quest.shuffledArray,\n      id: id\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  });\n\n  function checkWin() {\n    setIsDone(true);\n    const selected = questions.every(quest => quest.selected !== \"\");\n    let correctAmount = 0;\n    questions.forEach(quest => {\n      if (quest.correct_answer === quest.selected) {\n        correctAmount++;\n      }\n\n      setCorrect(correctAmount);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!hasStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start--container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quizzical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Some description if needed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start\",\n        onClick: startQuiz,\n        children: \"Start quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), hasStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz--container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions--container\",\n        children: questionElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), isDone > 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"You scored \", correct, \"/\", questions.length, \" correct answers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkWin,\n        children: \"Check answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: blobs,\n      id: \"blobs\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: blobs2,\n      id: \"blobs2\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n} // {\n//     \"category\": \"General Knowledge\",\n//     \"type\": \"multiple\",\n//     \"difficulty\": \"medium\",\n//     \"question\": \"Which language is NOT Indo-European?\",\n//     \"correct_answer\": \"Hungarian\",\n//     \"incorrect_answers\": [\n//       \"Russian\",\n//       \"Greek\",\n//       \"Latvian\"\n//     ]\n//   }\n\n_s(Main, \"CC2sVWgOKsqn1taKcJ4KXkggk+k=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["nanoid","useEffect","useState","Question","blobs","blobs2","Main","hasStarted","setHasStarted","questions","setQuestions","isDone","setIsDone","correct","setCorrect","console","log","fetch","then","res","json","data","results","map","quest","correct_answer","answers","incorrect_answers","sort","Math","random","selected","id","shuffledArray","startQuiz","prev","setSelected","selectedAnswer","questionElements","question","checkWin","every","correctAmount","forEach","length"],"sources":["/Users/jonathanvdmeij/Coding/WebDevelopment/React-course/quizzical/src/components/Main.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\nimport { useEffect, useState } from \"react\";\nimport Question from \"./Question\";\nimport blobs from \"../images/blobs.png\";\nimport blobs2 from \"../images/blobs2.png\";\n\nexport default function Main() {\n    const [hasStarted, setHasStarted] = useState(false);\n    const [questions, setQuestions] = useState([]);\n    const [isDone, setIsDone] = useState(false);\n    const [correct, setCorrect] = useState(0);\n\n    useEffect(() => {\n        console.log(\"run\");\n        fetch(\"https://opentdb.com/api.php?amount=5&category=9&difficulty=medium\")\n            .then((res) => res.json())\n            .then((data) =>\n                setQuestions(\n                    data.results.map((quest) => {\n                        console.log(quest.correct_answer);\n                        let answers = [...quest.incorrect_answers, quest.correct_answer];\n                        answers = answers.sort(() => Math.random() - 0.5);\n                        return {\n                            ...quest,\n                            selected: \"\",\n                            id: nanoid(),\n                            shuffledArray: answers,\n                        };\n                    })\n                )\n            );\n    }, []);\n\n    function startQuiz() {\n        setHasStarted((prev) => !prev);\n    }\n\n    function setSelected(id, selectedAnswer) {\n        setQuestions((prev) => {\n            return prev.map((quest) => {\n                if (quest.id === id) {\n                    return { ...quest, selected: selectedAnswer };\n                } else {\n                    return quest;\n                }\n            });\n        });\n    }\n\n    const questionElements = questions.map((quest) => {\n        const id = quest.id;\n\n        return (\n            <Question\n                setSelected={setSelected}\n                selected={quest.selected}\n                question={quest.question}\n                answers={quest.shuffledArray}\n                key={id}\n                id={id}\n            />\n        );\n    });\n\n    function checkWin() {\n        setIsDone(true);\n        const selected = questions.every((quest) => quest.selected !== \"\");\n\n        let correctAmount = 0;\n        questions.forEach((quest) => {\n            if (quest.correct_answer === quest.selected) {\n                correctAmount++;\n            }\n            setCorrect(correctAmount);\n        });\n    }\n\n    return (\n        <div>\n            {/* start screen */}\n            {!hasStarted && (\n                <div className=\"start--container\">\n                    <h1>Quizzical</h1>\n                    <p>Some description if needed</p>\n                    <button className=\"start\" onClick={startQuiz}>\n                        Start quiz\n                    </button>\n                </div>\n            )}\n            {/* quiz screen */}\n            {hasStarted && (\n                <div className=\"quiz--container\">\n                    <div className=\"questions--container\">{questionElements}</div>\n                    {isDone > 0 && (\n                        <h3>\n                            You scored {correct}/{questions.length} correct answers\n                        </h3>\n                    )}\n                    <button onClick={checkWin}>Check answers</button>\n                </div>\n            )}\n\n            {/* Background */}\n            <img src={blobs} id=\"blobs\" alt=\"\"></img>\n            <img src={blobs2} id=\"blobs2\" alt=\"\"></img>\n        </div>\n    );\n}\n// {\n//     \"category\": \"General Knowledge\",\n//     \"type\": \"multiple\",\n//     \"difficulty\": \"medium\",\n//     \"question\": \"Which language is NOT Indo-European?\",\n//     \"correct_answer\": \"Hungarian\",\n//     \"incorrect_answers\": [\n//       \"Russian\",\n//       \"Greek\",\n//       \"Latvian\"\n//     ]\n//   }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}